// Code generated by goctl. DO NOT EDIT.
package types

type IsUsernameExistReq struct {
	Username string `form:"username" binding:"required"`
}

type IsUsernameExistResp struct {
	Exist bool `json:"exist"`
}

type RegisterReq struct {
	Username string `json:"username" binding:"required"`
	Password string `json:"password" binding:"required"`
}

type RegisterResp struct {
	UserModel UserModel `json:"userModel"`
	Token     string    `json:"token"`
}

type LoginReq struct {
	Username string `json:"username" binding:"required"`
	Password string `json:"password" binding:"required"`
}

type LoginResp struct {
	UserModel UserModel `json:"userModel"`
	Token     string    `json:"token"`
}

type UserModel struct {
	ID           string `json:"id"`
	Username     string `json:"username"`
	Nickname     string `json:"nickname"`
	Sign         string `json:"sign"`
	Avatar       string `json:"avatar"`
	Province     string `json:"province"`
	City         string `json:"city"`
	District     string `json:"district"`
	Birthday     string `json:"birthday"`
	RegisterTime string `json:"registerTime"`
	IsMale       bool   `json:"isMale"`
}

type GetSelfInfoReq struct {
}

type GetSelfInfoResp struct {
	UserModel UserModel `json:"userModel"`
}

type GetUserByUsernameReq struct {
	Username string `from:"username"`
}

type GetUserByUsernameResp struct {
	UserModel UserModel `json:"userModel"`
}

type ModifySelfInfoReq struct {
	Nickname string `json:"nickname"`
	Sign     string `json:"sign"`
	Avatar   string `json:"avatar"`
	Province string `json:"province"`
	City     string `json:"city"`
	District string `json:"district"`
	Birthday string `json:"birthday"`
	IsMale   bool   `json:"isMale"`
}

type ModifySelfInfoResp struct {
	ErrCode int    `json:"errCode"`
	ErrMsg  string `json:"errMsg"`
}

type RealtionUser struct {
	Id         string `json:"id"`
	Nickname   string `json:"nickname"`
	Sign       string `json:"sign"`
	Avatar     string `json:"avatar"`
	CreateTime string `json:"createTime"`
}

type ApplyFriendReq struct {
	UserId  string `json:"userId"`
	Message string `json:"message"`
}

type ApplyFriendResp struct {
}

type AgreeFriendReq struct {
	ApplyId string `json:"applyId"`
}

type AgreeFriendResp struct {
}

type RefuseFriendReq struct {
	ApplyId string `json:"applyId"`
}

type RefuseFriendResp struct {
}

type GetFriendListReq struct {
}

type GetFriendListResp struct {
	FriendList []RealtionUser `json:"friendList"`
}

type GetFriendApplyListReq struct {
	PageNo   int `from:"pageNo"`
	PageSize int `from:"pageSize"`
}

type GetFriendApplyItem struct {
	Id         string `json:"id"`
	Nickname   string `json:"nickname"`
	Sign       string `json:"sign"`
	Avatar     string `json:"avatar"`
	CreateTime string `json:"createTime"`
	Status     int    `json:"status"`
	StatusStr  string `json:"statusStr"`
}

type GetFriendApplyListResp struct {
	ApplyList []GetFriendApplyItem `json:"applyList"`
}

type DeleteFriendReq struct {
	FriendId string `json:"friendId"`
}

type DeleteFriendResp struct {
}

type BlackUserReq struct {
	UserId string `json:"userId"`
}

type BlackUserResp struct {
}

type GetBlackListReq struct {
	PageNo   int `from:"pageNo"`
	PageSize int `from:"pageSize"`
}

type GetBlackListResp struct {
	BlackList []RealtionUser `json:"blackList"`
}

type UnBlackUserReq struct {
	UserId string `json:"userId"`
}

type UnBlackUserResp struct {
}
