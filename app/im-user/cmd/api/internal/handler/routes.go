// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	imuser "github.com/showurl/Zero-IM-Server/app/im-user/cmd/api/internal/handler/imuser"
	"github.com/showurl/Zero-IM-Server/app/im-user/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.JwtAuth},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/white/account/exist",
					Handler: imuser.IsUsernameExistHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/white/account/register",
					Handler: imuser.RegisterHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/white/account/login",
					Handler: imuser.LoginHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/user/selfinfo",
					Handler: imuser.GetSelfInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/user/getinfobyusername",
					Handler: imuser.GetUserByUsernameHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/user/selfinfo",
					Handler: imuser.UpdateSelfInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/relation/friend/apply",
					Handler: imuser.ApplyFriendHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/relation/friend/agree",
					Handler: imuser.AgreeFriendHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/relation/friend/refuse",
					Handler: imuser.RefuseFriendHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/relation/friend/list",
					Handler: imuser.GetFriendListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/relation/friend/apply/list",
					Handler: imuser.GetFriendApplyListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/relation/friend/delete",
					Handler: imuser.DeleteFriendHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/relation/black/add",
					Handler: imuser.BlackUserHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/relation/black/delete",
					Handler: imuser.UnBlackUserHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/relation/black/list",
					Handler: imuser.GetBlackListHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1"),
	)
}
