// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package server

import (
	"context"

	"github.com/showurl/Path-IM-Server/app/im-user/cmd/rpc/internal/logic"
	"github.com/showurl/Path-IM-Server/app/im-user/cmd/rpc/internal/svc"
	"github.com/showurl/Path-IM-Server/app/im-user/cmd/rpc/pb"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServiceServer) GetUserById(ctx context.Context, in *pb.GetUserByIdReq) (*pb.GetUserResp, error) {
	l := logic.NewGetUserByIdLogic(ctx, s.svcCtx)
	return l.GetUserById(in)
}

func (s *UserServiceServer) GetUserByIds(ctx context.Context, in *pb.GetUserByIdsReq) (*pb.GetUserListResp, error) {
	l := logic.NewGetUserByIdsLogic(ctx, s.svcCtx)
	return l.GetUserByIds(in)
}

func (s *UserServiceServer) GetUserByUsername(ctx context.Context, in *pb.GetUserByUsernameReq) (*pb.GetUserResp, error) {
	l := logic.NewGetUserByUsernameLogic(ctx, s.svcCtx)
	return l.GetUserByUsername(in)
}

func (s *UserServiceServer) InsertUser(ctx context.Context, in *pb.InsertUserReq) (*pb.InsertUserResp, error) {
	l := logic.NewInsertUserLogic(ctx, s.svcCtx)
	return l.InsertUser(in)
}

func (s *UserServiceServer) UpdateUser(ctx context.Context, in *pb.UpdateUserReq) (*pb.UpdateUserResp, error) {
	l := logic.NewUpdateUserLogic(ctx, s.svcCtx)
	return l.UpdateUser(in)
}

func (s *UserServiceServer) LoginByPassword(ctx context.Context, in *pb.LoginByPasswordReq) (*pb.LoginResp, error) {
	l := logic.NewLoginByPasswordLogic(ctx, s.svcCtx)
	return l.LoginByPassword(in)
}

func (s *UserServiceServer) LoginById(ctx context.Context, in *pb.LoginByIdReq) (*pb.LoginResp, error) {
	l := logic.NewLoginByIdLogic(ctx, s.svcCtx)
	return l.LoginById(in)
}
